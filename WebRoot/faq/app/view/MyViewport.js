/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    requires: [
        'Ext.tab.Panel',
        'Ext.tab.Tab',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column',
        'Ext.toolbar.Paging',
        'Ext.form.Panel',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.form.field.Date',
        'Ext.form.field.HtmlEditor'
    ],

    border: 0,
    layout: 'fit',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'tabpanel',
                    border: 0,
                    id: 'faq',
                    activeTab: 0,
                    items: [
                        {
                            xtype: 'panel',
                            border: 0,
                            autoScroll: true,
                            title: '答案知识',
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    height: 300,
                                    id: 'faqgridpanel',
                                    margin: '10px 10px 10px 10px',
                                    enableColumnHide: false,
                                    store: 'faqStore',
                                    viewConfig: {
                                        loadingText: '答案知识正在加载中,请稍后...',
                                        enableTextSelection: true
                                    },
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                            },
                                            width: 400,
                                            dataIndex: 'answer',
                                            text: '答案'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                            },
                                            width: 70,
                                            align: 'center',
                                            dataIndex: 'channel',
                                            text: '渠道'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                var type = "";
                                                if(value=="0"){
                                                    type = "普通文字";
                                                }else if(value=="1"){
                                                    type = "答案模型";
                                                }else if(value=="2"){
                                                    type = "触发动作";
                                                }else if(value=="3"){
                                                    type = "普通文字+触发动作";
                                                }else if(value=="4"){
                                                    type = "答案模型+触发动作";
                                                }else if(value=="6"){
                                                    type = "多条件查询";
                                                }else{
                                                    type = "普通文字";
                                                }
                                                return '<div style="white-space:normal;font-size:12px;">' + type + '</div>';
                                            },
                                            width: 125,
                                            dataIndex: 'answertype',
                                            text: '答案类型'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                            },
                                            width: 80,
                                            align: 'center',
                                            dataIndex: 'customertype',
                                            text: '客户类型'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                            },
                                            width: 200,
                                            dataIndex: 'servicetype',
                                            text: '商家组织应用'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                            },
                                            width: 80,
                                            align: 'center',
                                            dataIndex: 'starttime',
                                            text: '起始时间'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<div style="white-space:normal;font-size:12px;">' + value + '</div>';
                                            },
                                            width: 80,
                                            align: 'center',
                                            dataIndex: 'endtime',
                                            text: '截止时间'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'kbanswerid',
                                            text: 'kbanswerid'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'kbcontentid',
                                            text: 'kbcontentid'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'kbansvaliddateid',
                                            text: 'kbansvaliddateid'
                                        }
                                    ],
                                    dockedItems: [
                                        {
                                            xtype: 'pagingtoolbar',
                                            dock: 'bottom',
                                            width: 360,
                                            displayInfo: true,
                                            store: 'faqStore',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    icon: '../Images/add-small.gif',
                                                    text: '新增',
                                                    tooltip: '新增',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    icon: '../Images/edit.gif',
                                                    text: '修改',
                                                    tooltip: '修改',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick1,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    icon: '../Images/delete-small.gif',
                                                    text: '删除',
                                                    tooltip: '删除',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick2,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    listeners: {
                                        render: {
                                            fn: me.onFaqgridpanelRender,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'form',
                                    border: 0,
                                    height: 450,
                                    id: 'form',
                                    margin: '10px 0px 10px 0px',
                                    layout: 'column',
                                    title: '答案知识编辑区',
                                    items: [
                                        {
                                            xtype: 'radiogroup',
                                            columnWidth: 1,
                                            id: 'customertype',
                                            margin: '10px 10px 10px 10px',
                                            fieldLabel: '客户类型',
                                            columns: 8
                                        },
                                        {
                                            xtype: 'panel',
                                            columnWidth: 1,
                                            border: 0,
                                            hidden: true,
                                            margin: '0px 10px 10px 10px',
                                            layout: 'column',
                                            items: [
                                                {
                                                    xtype: 'radiofield',
                                                    columnWidth: 0.5,
                                                    margin: '',
                                                    fieldLabel: '商家组织应用',
                                                    boxLabel: 'sys'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'checkboxgroup',
                                            columnWidth: 1,
                                            id: 'cbchannel',
                                            margin: '10px 10px 10px 10px',
                                            width: 400,
                                            fieldLabel: '渠道',
                                            columns: 8
                                        },
                                        {
                                            xtype: 'datefield',
                                            columnWidth: 0.4,
                                            id: 'stime',
                                            margin: '10px 100px 10px 10px',
                                            width: 246,
                                            fieldLabel: '起始时间',
                                            format: 'Y/m/d'
                                        },
                                        {
                                            xtype: 'datefield',
                                            columnWidth: 0.4,
                                            id: 'etime',
                                            margin: '10px 100px 10px 0px',
                                            width: 300,
                                            fieldLabel: '截止时间',
                                            format: 'Y/m/d'
                                        },
                                        {
                                            xtype: 'panel',
                                            columnWidth: 1,
                                            border: 0,
                                            margin: '10px 0px 10px 0px',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    margin: '0px 0px 0px 115px',
                                                    text: '问题要素组合回复',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick3,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'panel',
                                            columnWidth: 1,
                                            border: 0,
                                            margin: '10px 0px 10px 0px'
                                        },
                                        {
                                            xtype: 'radiogroup',
                                            columnWidth: 0.3,
                                            id: 'answertype',
                                            margin: '10px 0px 10px 10px',
                                            width: 400,
                                            fieldLabel: '答案类型',
                                            layout: {
                                                type: 'vbox',
                                                align: 'stretch'
                                            },
                                            items: [
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'type',
                                                    boxLabel: '普通文字',
                                                    checked: true,
                                                    inputValue: '0'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    name: 'type',
                                                    boxLabel: '答案模型',
                                                    inputValue: '1'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    flex: 1,
                                                    name: 'type',
                                                    boxLabel: '触发动作',
                                                    inputValue: '2'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    flex: 1,
                                                    name: 'type',
                                                    boxLabel: '普通文字+触发动作',
                                                    inputValue: '3'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    flex: 1,
                                                    name: 'type',
                                                    boxLabel: '答案模型+触发动作',
                                                    inputValue: '4'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'htmleditor',
                                            columnWidth: 0.7,
                                            height: 150,
                                            id: 'taanswer',
                                            margin: '10px 10px 10px 0px',
                                            fieldLabel: '答案',
                                            labelWidth: 80,
                                            enableAlignments: false,
                                            enableFormat: false
                                        },
                                        {
                                            xtype: 'textfield',
                                            hidden: true,
                                            id: 'kbansvaliddateid',
                                            fieldLabel: 'Label',
                                            hideLabel: true
                                        },
                                        {
                                            xtype: 'button',
                                            margin: '10px 10px 10px 0px',
                                            width: 83,
                                            text: '插入模板列',
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick5,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'panel',
                                            columnWidth: 1,
                                            border: 0,
                                            margin: '10px 0px 10px 0px',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    id: 'btnsave',
                                                    margin: '0px 100px 0px 300px',
                                                    width: 80,
                                                    text: '保存',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onBtnsafeClick,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    hidden: true,
                                                    id: 'btnupdate',
                                                    margin: '0px 100px 0px 300px',
                                                    width: 80,
                                                    text: '修改',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onBtnupdateClick,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    width: 80,
                                                    text: '清空',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick4,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        Ext.getCmp("form").getForm().reset();
        Ext.getCmp("btnsave").show();
        Ext.getCmp("btnupdate").hide();
    },

    onButtonClick1: function(button, e, eOpts) {
        var model = Ext.getCmp('faqgridpanel').getSelectionModel();
        if(model.getSelection().length===0){
            Ext.MessageBox.alert('修改提示','请先选择一行！');
            return;
        }
        Ext.getCmp("form").getForm().reset();
        Ext.getCmp("btnsave").show();
        Ext.getCmp("btnupdate").hide();
        var data = model.getSelection()[0].data;
        if(data.answertype==6){
            Ext.MessageBox.alert('修改提示','当答案类型为 “多条件查询” 时,不可修改!');
            return;
        }else{
            Ext.getCmp("btnsave").hide();
            Ext.getCmp("btnupdate").show();
            Ext.getCmp('taanswer').setValue(data.answer);
            //渠道
            var cbchannel = Ext.getCmp('cbchannel');
            var length = cbchannel.items.getCount();
            for (i = 0; i < length; i++) {
                cbchannel.items.items[i].setValue(false);
                if(cbchannel.items.items[i].boxLabel==data.channel){
                    cbchannel.items.items[i].setValue(true);
                }
            }
            //客户类型
            var customertype = Ext.getCmp('customertype');
            length = customertype.items.getCount();
            for (i = 0; i < length; i++) {
                customertype.items.items[i].setValue(false);
                if(customertype.items.items[i].boxLabel==data.customertype){
                    customertype.items.items[i].setValue(true);
                }
            }
            //开始时间和结束时间
            Ext.getCmp('stime').setValue(data.starttime);
            Ext.getCmp('etime').setValue(data.endtime);
            //答案类型
            var radiogroup = Ext.getCmp('answertype');
            if(data.answertype===0){
                radiogroup.items.items[0].setValue(true);
            }else if(data.answertype==1){
                radiogroup.items.items[1].setValue(true);
            }else if(data.answertype==2){
                radiogroup.items.items[2].setValue(true);
            }else if(data.answertype==3){
                radiogroup.items.items[3].setValue(true);
            }else if(data.answertype==4){
                radiogroup.items.items[4].setValue(true);
            }
            //kbansvaliddateid
            Ext.getCmp("kbansvaliddateid").setValue(data.kbansvaliddateid);
        }
    },

    onButtonClick2: function(button, e, eOpts) {
        var gpdata = Ext.getCmp('faqgridpanel');
        var model = gpdata.getSelectionModel();
        if(model.getSelection().length===0){
            Ext.MessageBox.alert('删除提示','请先选择一行！');
            return;
        }
        Ext.MessageBox.confirm('删除提示','确定删除？',function(id){
            if(id=='yes'){
                var data = model.getSelection()[0].data;
                var param = {};
                param["service"] = service;
                param["brand"] = brand;
                param["kbansvaliddateid"] = data.kbansvaliddateid;
                param["answer"] = data.answer;
                Ext.Ajax.request({
                    url: '../faq.action',
                    method: 'post',
                    async: false,
                    params:{type:'delete',param:Ext.JSON.encode(param)},
                    success: function (result, request) {
                        var retobj = Ext.JSON.decode(result.responseText);
                        Ext.MessageBox.alert('提示', retobj.msg);
                        if(retobj.success===true){
                            gpdata.store.loadPage(1);
                            Ext.getCmp("form").getForm().reset();
                            Ext.getCmp("btnsave").show();
                            Ext.getCmp("btnupdate").hide();
                        }
                    },
                    failure: function (result, request) {
                        Ext.MessageBox.alert('系统异常', '请求数据失败！');
                    }
                });
            }
        });
    },

    onFaqgridpanelRender: function(component, eOpts) {
        //填充客户类型
        Ext.Ajax.request({
            url: '../faq.action',
            method: 'post',
            async: false,
            params:{type:'customer'},
            success: function (result, request) {
                var customertypeitems = Ext.JSON.decode(result.responseText).root;
                var customertype = Ext.getCmp('customertype');
                var item ;
                for(var i=0;i<customertypeitems.length;i++){
                    if(customertypeitems[i]['customertype']=='普通客户'){
                        item =  new Ext.form.Radio({boxLabel:customertypeitems[i]['customertype'],name:'customertype',checked:true, xtype: 'radiofield'});
                    }else{
                        item =  new Ext.form.Radio({boxLabel:customertypeitems[i]['customertype'],name:'customertype', xtype: 'radiofield'});
                    }
                    customertype.items.add(item);
                }
            },
            failure: function (result, request) {
                Ext.MessageBox.alert('系统异常', '请求数据失败！');
            }
        });
        //填充渠道
        Ext.Ajax.request({
            url: '../faq.action',
            method: 'post',
            async: false,
            params:{type:'channel'},
            success: function (result, request) {
                var channelitems = Ext.JSON.decode(result.responseText).root;
                var cbchannel = Ext.getCmp('cbchannel');
                var allcheck = new Ext.form.Checkbox({boxLabel:'全选',
                    onChange:function(){
                        var length = cbchannel.items.getCount();
                        if (allcheck.checked) {
                            for (i = 0; i < length; i++) {
                                cbchannel.items.items[i].setValue(true);
                            }
                        }else{
                            for (i = 0; i < length; i++) {
                                cbchannel.items.items[i].setValue(false);
                            }
                        }
                    }
                });
                cbchannel.items.add(allcheck);
                for(var i = 0;i < channelitems.length; i++){
                    var item = new Ext.form.Checkbox({boxLabel:channelitems[i]['channel']});
                    cbchannel.items.add(item);
                }
            },
            failure: function (result, request) {
                Ext.MessageBox.alert('系统异常', '请求数据失败！');
            }
        });
        Ext.getCmp("faqgridpanel").store.loadPage(1);
    },

    onButtonClick3: function(button, e, eOpts) {
        var taanswer = Ext.getCmp('taanswer');
        var cbchannel = Ext.getCmp('cbchannel');
        var gpdata = Ext.getCmp('faqgridpanel');
        var customertype = Ext.getCmp('customertype');
        var answer = Ext.String.trim(taanswer.getValue());
        var starttime = Ext.getCmp('stime').getValue();
        var endtime = Ext.getCmp('etime').getValue();

        var ctype = "";
        var customertypelength = customertype.items.getCount();
        for(var i = 0;i < customertypelength; i++){
            if (customertype.items.items[i].checked) {
                ctype =customertype.items.items[i].boxLabel;
            }
        }

        var channelcount = 0;
        var channel = "";
        var channellength = cbchannel.items.getCount();
        for(var i = 1;i < channellength; i++){
            if (cbchannel.items.items[i].checked) {
                channelcount++;
                channel += cbchannel.items.items[i].boxLabel+",";
            }
        }
        channel = channel.substr(0,channel.length-1);
        if(channel===""||channel===null){
            Ext.MessageBox.alert('提示', "请至少选择一个渠道!");
            return;
        }else if(channelcount>1){
            Ext.MessageBox.alert('提示', "最多选择一个渠道!");
            return;
        }
        var city = "上海";
        var param = {};
        param["channel"] = channel;
        param["customertype"] = ctype;
        param["starttime"] = starttime;
        param["endtime"] = endtime;
        param["answerType"] = 6;
        param["brand"] = brand;
        param["kbdataid"] = kbdataid;

        Ext.Ajax.request({
            url: '../faq.action',
            method: 'post',
            async: false,
            params:{
                type:'queryelement',
                param: Ext.JSON.encode(param)
            },
            success: function (result, request) {
                var obj = Ext.JSON.decode(result.responseText);
                if(obj.success===false){
                    Ext.MessageBox.alert('提示', obj.msg);
                }else if(obj.success===true){
                    var kbcontentid = obj.kbcontentid;
                    var kbanswerid = obj.kbanswerid;
                    var url = '../queryelement/queryelement.jsp?wordpattype=0&kbdataids=' + encodeURI(kbdataid) + '&kbcontentid=' + encodeURI(kbcontentid) + '&city=' + encodeURIComponent(city) + '&brand=' + encodeURIComponent(brand) + '&kbanswerid=' + encodeURI(kbanswerid)+'&_abstract='+encodeURIComponent(_abstract);
                    var text = "问题要素组合-" + _abstract;
                    var pre = "panel";
                    loadPanel(url,pre,text);
                }else{
                    Ext.MessageBox.alert('提示', obj.msg);
                }
            },
            failure: function (result, request) {
                Ext.MessageBox.alert('系统异常', '请求数据失败！');
            }
        });
    },

    onButtonClick5: function(button, e, eOpts) {
        var win = new Ext.Window({
            x:260,
            height: 250,
            width: 610,
            layout: 'absolute',
            title: '模板列名搜索',
            draggable: false,
            maximizable : false,// 最大化控制 值为true时可以最大化窗体
            modal:true,//背景变灰不可编辑

            items: [
                        {
                            xtype: 'combobox',
                            x: 10,
                            y: 60,
                            width: 470,
                            id:'comboboxTemplateColumn',
                            fieldLabel: '模板列名选择',
                            store: 'templateColumnStore',
                            listeners: {
                                beforequery:function(queryPlan, eOpts) {
                                 var comboboxservice = Ext.getCmp("comboboxTemplateColumn");
                                 var name =comboboxservice.getValue();
                                 comboboxservice.store.loadPage(1);
                                 comboboxservice.expand();
            }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 500,
                            y: 60,
                            text: '插入',
                              listeners: {
                              click: function(button, e, eOpts) {
                              var columnName = Ext.getCmp("comboboxTemplateColumn").getRawValue();
                                  if(columnName===""||!columnName){
                                     return;
                                  }
                              var answer =Ext.getCmp('taanswer').getValue();
                              answer = answer+"<@"+columnName+">";
                              Ext.getCmp('taanswer').setValue(answer);
                              win.close();
                           }
                   }
                        },
                     {
                            xtype: 'button',
                            x: 545,
                            y: 60,
                            text: '取消',
                              listeners: {
                              click: function(button, e, eOpts) {
                              win.close();
                           }
                   }
                        }
                    ]








        });
        win.show();
    },

    onBtnsafeClick: function(button, e, eOpts) {
        var gpdata = Ext.getCmp('faqgridpanel');
        var answer = Ext.String.trim(Ext.getCmp('taanswer').getValue());
        var answerType = Ext.getCmp('answertype').getChecked()[0].inputValue;
        var starttime = Ext.getCmp('stime').getValue();
        var endtime = Ext.getCmp('etime').getValue();


        //alert(starttime);
        //alert(endtime);

        //alert(answer)
        var customertype = Ext.getCmp('customertype');
        var ctype = "";
        for(var i = 0;i < customertype.items.getCount(); i++){
            if (customertype.items.items[i].checked) {
                ctype =customertype.items.items[i].boxLabel;
            }
        }

        var cbchannel = Ext.getCmp('cbchannel');
        var channel = "";
        for(var i = 1;i < cbchannel.items.getCount(); i++){
            if (cbchannel.items.items[i].checked) {
                channel += cbchannel.items.items[i].boxLabel+",";
            }
        }
        channel = channel.substr(0,channel.length-1);

        if(channel===""||channel===null){
            Ext.MessageBox.alert('提示', "请至少选择一个渠道!");
            return;
        }

        var param = {};
        param["channel"] = channel;
        param["customertype"] = ctype;
        param["starttime"] = starttime;
        param["endtime"] = endtime;
        param["answerType"] = answerType;
        param["answer"] = answer;
        param["service"] = service;
        param["brand"] = brand;
        param["kbdataid"] = kbdataid;
        Ext.Ajax.request({
            url: '../faq.action',
            method: 'post',
            async: false,
            params:{
                type:'insert',
                param: Ext.JSON.encode(param)
            },
            success: function (result, request) {
                var retobj = Ext.JSON.decode(result.responseText);
                Ext.MessageBox.alert('提示', "保存" + retobj.msg);
                if(retobj.success===true){
                    gpdata.store.loadPage(1);
                    Ext.getCmp("form").getForm().reset();
                    Ext.getCmp("btnsave").show();
                    Ext.getCmp("btnupdate").hide();
                }
            },
            failure: function (result, request) {
                Ext.MessageBox.alert('系统异常', '请求数据失败！');
            }
        });
    },

    onBtnupdateClick: function(button, e, eOpts) {
        var gpdata = Ext.getCmp('faqgridpanel');
        var answer = Ext.String.trim(Ext.getCmp('taanswer').getValue());
        var answerType = Ext.getCmp('answertype').getChecked()[0].inputValue;
        var starttime = Ext.getCmp('stime').getValue();
        var endtime = Ext.getCmp('etime').getValue();
        var kbansvaliddateid = Ext.getCmp("kbansvaliddateid").getValue();

        var customertype = Ext.getCmp('customertype');
        var ctype = "";
        for(var i= 0;i < customertype.items.getCount();i++){
            if (customertype.items.items[i].checked) {
                ctype =customertype.items.items[i].boxLabel;
            }
        }

        var cbchannel = Ext.getCmp('cbchannel');
        var channel = "";
        for(var i= 1;i < cbchannel.items.getCount(); i++){
            if (cbchannel.items.items[i].checked) {
                channel += cbchannel.items.items[i].boxLabel+",";
            }
        }
        channel = channel.substr(0,channel.length-1);

        if(channel===""||channel===null){
            Ext.MessageBox.alert('提示', "请至少选择一个渠道!");
            return;
        }

        var param = {};
        param["kbansvaliddateid"] = kbansvaliddateid;
        param["channel"] = channel;
        param["customertype"] = ctype;
        param["starttime"] = starttime;
        param["endtime"] = endtime;
        param["answerType"] = answerType;
        param["answer"] = answer;
        param["service"] = service;
        param["brand"] = brand;
        param["kbdataid"] = kbdataid;

        Ext.Ajax.request({
            url: '../faq.action',
            method: 'post',
            async: false,
            params:{
                type:'update',
                param: Ext.JSON.encode(param)
            },
            success: function (result, request) {
                var success = Ext.JSON.decode(result.responseText).success;
                var retobj = Ext.JSON.decode(result.responseText);
                Ext.MessageBox.alert('提示', "修改" + retobj.msg);
                if(retobj.success===true){
                    gpdata.store.loadPage(1);
                    Ext.getCmp("form").getForm().reset();
                    Ext.getCmp("btnsave").show();
                    Ext.getCmp("btnupdate").hide();
                }
            },
            failure: function (result, request) {
                Ext.MessageBox.alert('系统异常', '请求数据失败！');
            }
        });
    },

    onButtonClick4: function(button, e, eOpts) {
        Ext.getCmp("form").getForm().reset();
        Ext.getCmp("btnsave").show();
        Ext.getCmp("btnupdate").hide();
    }

});