/*
 * File: app/store/StoreGridPanel.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.store.StoreGridPanel', {
    extend: 'Ext.data.Store',

    requires: [
        'MyApp.model.ModelGridPanel',
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Json'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            autoLoad: true,
            model: 'MyApp.model.ModelGridPanel',
            storeId: 'MyStore',
            pageSize: 10,
            proxy: {
                type: 'ajax',
                url: '../wordpat.action',
                reader: {
                    type: 'json',
                    root: 'root'
                }
            },
            listeners: {
                beforeload: {
                    fn: me.onStoreBeforeLoad,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onStoreBeforeLoad: function(store, operation, eOpts) {
        var param={};

        param["cityids"]=cityids;
        param["brand"]=brand;
        param["service"]=service;
        param["topic"]=topic;
        param["_abstract"]=_abstract;
        param["wordpattype"]=wordpattype;
        param["kbdataids"]=kbdataids;

        if(Ext.getCmp("textfieldWordpat")!=null){

            //查询条件赋值
            var wordpat = Ext.getCmp("textfieldWordpat").getValue().replace(new RegExp(' ','g'),'');
            if(wordpat!=""&&wordpat!=null){
                wordpat  = toSimp(wordpat);
                wordpat = wordpat.replace(new RegExp('@[1|2]#','g'),'%');
               // wordpat = wordpat.replace(new RegExp('#[有序|无序]#','g'),'%');
                 wordpat = wordpat.replace('#有序#','%');
                 wordpat = wordpat.replace('#无序#','%');

            }
            //alert(wordpat);
            var correctratiofrom = Ext.getCmp("textfieldCorrectRatioFrom").getValue();
            var correctratioto = Ext.getCmp("textfieldCorrectRatioTo").getValue();
            var callnumberfrom = Ext.getCmp("textfieldCallNumberFrom").getValue();
            var callnumberto = Ext.getCmp("textfieldCallNumberTo").getValue();
            var autosendswitch = Ext.getCmp('comboboxAutoSendSwitch').getValue();

            param["_wordpat"]=wordpat;
            param["correctratiofrom"]=correctratiofrom;
            param["correctratioto"]=correctratioto;
            param["callnumberfrom"]=callnumberfrom;
            param["callnumberto"]=callnumberto;
            param["autosendswitch"]=autosendswitch;

        }
        this.proxy.actionMethods = "POST";
        this.proxy.extraParams = {
            action: 'select',
            param:Ext.JSON.encode(param)
        };



        String.prototype.startsWith=function(str){
        	  var reg=new RegExp("^"+str);
        	  return reg.test(this);
        		}  ;
        	String.prototype.endWith=function(str){
        	  var reg=new RegExp(str+"$");
        	  return reg.test(this);
        	};


        	/*正则表达式 替换括号,尖括号等*/
        	function toSimp(str) {
                var RexStr = /\!|\<|\>|\[|\]/g;
        		str=str.replace(/\>\<|\>\[|\]\<|\]\[|\-|\|/g,"*");
        		str = str.replace(RexStr, "");
                RexStr = /\*/g;
                str = str.replace(RexStr, "%");
                //str=str.replace(/\@\[1|2\]\#|\#\[有序|无序\]\#/g,"%");
        		return str;
        	}


    }

});